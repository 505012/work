// node : 1) 비동기 기능(성능 증가)
// 자바스크립트 코딩(비동기 프로그래밍 한다)
// 비동기 : 요청하면 결과가 먼저 처리한 곳에 주는대로 실행함
// 장점 : 성능 증가
// 단점 : 순서에 맞는 결과가 중요하면 결과가 꼬일 수 있음
// 예) 은행 계좌 : 입금 출금 ->(비동기 시 입금되기전에 출금될 수 있음)
//  해결책 : promise 이용 : 순서에 입각해서 실행을 할 수 있음.
// (참고)동기 : 요청한 순서대로 결과가 옴(c언어 등)


// // 1st 순서 : 
// console.log("학교에 갑니다.")
// // 2nd 순서:
// setTimeout(()=>{
//     console.log("학교에 도착했습니다.")
// },1000);
// // 3rd순서
// console.log("열심히 코딩을 합니다.")

// TODO: 프라미스를 이용해서 개선
// 알필요없음 : 프라미스 객체 생성(x)
var goSchool = new Promise((resolve, reject) => {
    // 2초 지연 함수 : Promise 객체에 넣음
    setTimeout(function() {
        console.log("학교에 도착했습니다.");
        // resolve() : 결과 성공했다는 확인 함수
        resolve();
    }, 2000);
});



// todo :여기서 부터 알필요 있음
// 1st
console.log("학교에 갑니다.")
// 2nd : 비동기 코딩(순서를 지켜 출력시키기)
goSchool.then(()=>{
    // console.log("학교에 도착했습니다.") 실행이 끝나명
    // 아래 실행문이 실행되게 보장하는함수 : then();
    // todo : 프라미스 객체안에 실행이성공하면 then() 자동 실행되는 구조임
    // todo : 프라미스 결과는 언제 올지 모름
    console.log("열심히 코딩을 합니다.")
})